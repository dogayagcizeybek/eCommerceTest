///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace eCommerceTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BlankErrorVerify recording.
    /// </summary>
    [TestModule("9e39572a-c9a3-4831-99eb-3f351a7c6325", ModuleType.Recording, 1)]
    public partial class BlankErrorVerify : ITestModule
    {
        /// <summary>
        /// Holds an instance of the eCommerceTestRepository repository.
        /// </summary>
        public static eCommerceTestRepository repo = eCommerceTestRepository.Instance;

        static BlankErrorVerify instance = new BlankErrorVerify();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BlankErrorVerify()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BlankErrorVerify Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click e-mail field.
            Report.Log(ReportLevel.Info, "Mouse", "Click e-mail field.\r\nMouse Left Click item 'ApplicationUnderTest.RegisterEmail' at 67;47.", repo.ApplicationUnderTest.RegisterEmailInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.RegisterEmail.Click("67;47");
            Delay.Milliseconds(0);
            
            // Type a blank space in the e-mail field.
            Report.Log(ReportLevel.Info, "Keyboard", "Type a blank space in the e-mail field.\r\nKey sequence ' ' with focus on 'ApplicationUnderTest.RegisterEmail'.", repo.ApplicationUnderTest.RegisterEmailInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.RegisterEmail.PressKeys(" ");
            Delay.Milliseconds(0);
            
            // Validate there is blank space in the e-mail field.
            Report.Log(ReportLevel.Info, "Validation", "Validate there is blank space in the e-mail field.\r\nValidating AttributeEqual (Value='') on item 'ApplicationUnderTest.RegisterEmail'.", repo.ApplicationUnderTest.RegisterEmailInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.RegisterEmailInfo, "Value", "");
            Delay.Milliseconds(100);
            
            // Click password field.
            Report.Log(ReportLevel.Info, "Mouse", "Click password field.\r\nMouse Left Click item 'ApplicationUnderTest.RegisterPasswordInput' at 67;47.", repo.ApplicationUnderTest.RegisterPasswordInputInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.RegisterPasswordInput.Click("67;47");
            Delay.Milliseconds(0);
            
            // Type a blank space in the password field.
            Report.Log(ReportLevel.Info, "Keyboard", "Type a blank space in the password field.\r\nKey sequence ' ' with focus on 'ApplicationUnderTest.RegisterPasswordInput'.", repo.ApplicationUnderTest.RegisterPasswordInputInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.RegisterPasswordInput.PressKeys(" ");
            Delay.Milliseconds(0);
            
            // Validate there is blank space in the password field.
            Report.Log(ReportLevel.Info, "Validation", "Validate there is blank space in the password field.\r\nValidating AttributeEqual (Value=' ') on item 'ApplicationUnderTest.RegisterPasswordInput'.", repo.ApplicationUnderTest.RegisterPasswordInputInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.ApplicationUnderTest.RegisterPasswordInputInfo, "Value", " ");
            Delay.Milliseconds(100);
            
            // Click any empty area.
            Report.Log(ReportLevel.Info, "Mouse", "Click any empty area.\r\nMouse Left Click item 'ApplicationUnderTest.Container' at 2194;758.", repo.ApplicationUnderTest.ContainerInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Container.Click("2194;758");
            Delay.Milliseconds(0);
            
            // Validate validation error is exist.
            Report.Log(ReportLevel.Info, "Validation", "Validate validation error is exist.\r\nValidating Exists on item 'ApplicationUnderTest.ErrorBoxWrapper'.", repo.ApplicationUnderTest.ErrorBoxWrapperInfo, new RecordItemIndex(7));
            Validate.Exists(repo.ApplicationUnderTest.ErrorBoxWrapperInfo);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
